apply plugin: 'com.android.application'
apply plugin: "com.bugsnag.android.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("GMT+1"))

bugsnag {
    overwrite = true
}

android {
    def packageName = "eu.thedarken.wldonate"

    def signingPropFile = new File(System.properties['user.home'], ".appconfig/${packageName}/signing.properties")
    if (signingPropFile.canRead()) {
        Properties signingProps = new Properties()
        signingProps.load(new FileInputStream(signingPropFile))
        signingConfigs {
            release {
                storeFile new File(signingProps['release.storePath'])
                keyAlias signingProps['release.keyAlias']
                storePassword signingProps['release.storePassword']
                keyPassword signingProps['release.keyPassword']
            }
        }
    }

    compileSdkVersion buildConfig.compileSdk

    Properties bugsnagProps = new Properties()
    def bugsnagPropsFile = new File(System.properties['user.home'], ".appconfig/${packageName}/bugsnag.properties")
    if (bugsnagPropsFile.canRead()) {
        println("Reading $bugsnagPropsFile")
        bugsnagProps.load(new FileInputStream(bugsnagPropsFile))
    }

    defaultConfig {
        applicationId "${packageName}"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        buildConfigField "String", "GITSHA", "\"${gitSha}\""
        buildConfigField "String", "BUILDTIME", "\"${buildTime}\""

        testInstrumentationRunner "${packageName}.ExampleTestRunner"

        manifestPlaceholders = [apikey_bugsnag: bugsnagProps.getProperty("bugsnag.apikey", "")]

        vectorDrawables.useSupportLibrary = true
    }
    lintOptions {
        abortOnError false
        ignore 'CheckResult'
    }
    buildTypes {
        debug {
            ext.enableBugsnag = false
        }
        release {
            if (signingConfigs.hasProperty('release')) signingConfig signingConfigs.release
            minifyEnabled false

            ext.enableBugsnag = true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            if (variant.buildType.name == "debug") {
                variant.mergedFlavor.resourceConfigurations.clear()
                variant.mergedFlavor.resourceConfigurations.add("en")
            } else if (variant.buildType.name != "debug") {
                variant.outputs.each { output ->
                    output.outputFileName = "${packageName}-v" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ")-" + variant.buildType.name.toUpperCase() + "-" + gitSha + ".apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.0"

    // Support libs
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'

    // Crashtracking
    implementation ('com.bugsnag:bugsnag-android:5.2.1') {
        exclude group: 'com.bugsnag', module: 'bugsnag-plugin-android-ndk'
    }

    // MVP lib
    implementation 'eu.darken.mvpbakery:library:0.7.1'

    // RX
    implementation "io.reactivex.rxjava2:rxjava:2.2.17"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //Dagger
    kapt "com.google.dagger:dagger-compiler:2.22.1"
    implementation "com.google.dagger:dagger:2.22.1"
    implementation "com.google.dagger:dagger-android:2.22.1"
    implementation "com.google.dagger:dagger-android-support:2.22.1"

    //Butterknife
    implementation "com.jakewharton:butterknife:10.2.1"
    kapt "com.jakewharton:butterknife-compiler:10.2.1"

    //Timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // Testing
    testImplementation "junit:junit:4.13"
    testImplementation "org.mockito:mockito-core:3.0.0"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'com.github.tmurakami:dexopener:1.0.2'

    androidTestImplementation "org.mockito:mockito-core:3.0.0"
    androidTestImplementation 'org.mockito:mockito-android:2.23.0'
    androidTestImplementation 'com.github.tmurakami:dexopener:1.0.2'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
}

kotlin {
    experimental {

    }
}